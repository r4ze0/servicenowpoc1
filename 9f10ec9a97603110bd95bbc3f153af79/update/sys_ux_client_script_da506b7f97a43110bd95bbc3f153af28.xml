<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes>b4e74225c3742010de10a0f89d40dd9c</includes>
        <macroponent display_value="Agent Chat Shell">32ef973f97a43110bd95bbc3f153afbf</macroponent>
        <name>handleAgentChatTransferred</name>
        <preset/>
        <required_translations/>
        <script><![CDATA[/**
 * handleAgentChatTransferred client script handler to emit the SCREEN_STATUS_CHANGED
 *  event to update the tab status. The payload includes the interaction page
 *  screenKey and indicator to represent the live update.
 *
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 *
 */
function handler({api, event, helpers, imports}) {
    /** active tab sysId **/
    const activeParentId = api.context.props.activeParentId;

    /** interaction sysId from the payload **/
    const sysId = event.payload.interaction.sys_id;

    /** interaction type from the payload **/
    const type = event.payload.interaction.type;

    /** interaction status from the payload **/
    const status = event.payload.status;

    /** generated screenKey for the interaction page in context **/
    const { getInteractionPageScreenKey, getInteractionIconIndicator } = imports["sn_omnich_interact.interactionUtils"]();

    if (activeParentId == sysId && status === 'inactive') {
        /** Send the screen_status_changed event from the chat shell to update the tab icon **/
        const screenKey = getInteractionPageScreenKey(sysId);

        /** When we transfer, we want to still use the chat-fill icon but in an inactive (black) state **/
        const iconName = getInteractionIconIndicator(type, 'active');

        api.emit('SCREEN_STATUS_CHANGED', {
            screenKey,
            icon: {
                name: iconName,
                status: status
            }
        });

    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-16 12:45:19</sys_created_on>
        <sys_id>da506b7f97a43110bd95bbc3f153af28</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>handleAgentChatTransferred</sys_name>
        <sys_package display_value="Capgemini" source="x_1075635_capgem_0">9f10ec9a97603110bd95bbc3f153af79</sys_package>
        <sys_policy/>
        <sys_scope display_value="Capgemini">9f10ec9a97603110bd95bbc3f153af79</sys_scope>
        <sys_update_name>sys_ux_client_script_da506b7f97a43110bd95bbc3f153af28</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-16 12:55:10</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
